look2 <- look2 %>% filter(Rank %in% c(1,2,3)) %>% summarise(avgAge = mean(Age,na.rm=TRUE), medAge=median(Age,na.rm=TRUE))
View(look)
View(look2)
knitr::opts_chunk$set(echo = TRUE)
## Clean up
rm(list=ls())
## set directories
# Production version
cDir<-'.'
dDir <- paste0(cDir,'/data/')
# Test version on windows
if (Sys.info()['sysname']=="Windows"){
cDir<-dirname(rstudioapi::getActiveDocumentContext()$path)
dDir <- paste0(cDir,'/data/')
}
## load libraries
library(tidyverse)
library(DBI)
library(RODBC)
library(ggplot2)
library(DT)
library(VIM)
# # read results data from local RDS file
results_read <- readRDS(paste0(dDir,'results.rds'))
# read NSWIS result IDs to join onto main results data
nswisResults <- readRDS(paste0(dDir,'nswisResults.rds'))
# remove first 3 columns (all values are the same in these columns)
results_raw <- results_read[,4:ncol(results_read)]
results_p1 <- readRDS(paste0(dDir,'results_p1.rds'))
results_p2 <- readRDS(paste0(dDir,'results_p2.rds'))
# read populations RDS file for population data
populations <- readRDS(paste0(dDir,'populations.rds')) %>%
mutate(Nationality = gsub('NSW','NSWIS',Nationality))
View(results_p1)
unique(results_p1$c_EditionCity)
unique(results_p1$Year)
results_p1 %>% filter(Rank %in% c(1,2,3) %>% group_by(Year) %>% summarise(n=n_distinct(Nationality))
results_p1 %>% filter(Rank %in% c(1,2,3)) %>% group_by(Year) %>% summarise(n=n_distinct(Nationality))
look <- results_p1 %>% filter(Rank %in% c(1,2,3)) %>% group_by(Year) %>% mutate(medals_on_offer = n_distinct(phase_result_id)) %>% ungroup() %>% group_by(Year, Nationality, medals_on_offer) %>% summarise(medals_won=n_distinct(phase_result_id), perc_on_offer = n_distinct(phase_result_id)/medals_on_offer, .groups='drop')
View(look)
# Total Medals Tally
d <- results_p1 %>%
mutate(Year = ifelse(Year%in%c(2021),2020,Year)) %>%
filter(Rank %in% c(1,2,3) & Nationality %in% c('AUS','GBR','USA','NZL')) %>%
group_by(Nationality, Year) %>%
summarise(Medals = n_distinct(phase_result_id),
Medalists = n_distinct(athleteID),.groups='drop')
View(d)
look <- results_p1 %>% filter(Rank %in% c(1,2,3)) %>% group_by(Year) %>% mutate(medals_on_offer = n_distinct(phase_result_id)) %>% ungroup() %>% group_by(Year, Nationality, medals_on_offer) %>% summarise(medals_won=n_distinct(phase_result_id), perc_on_offer = n_distinct(phase_result_id)/medals_on_offer, .groups='drop') %>% distinct()
look <- results_p1 %>% filter(Rank %in% c(1,2,3)) %>% group_by(Year) %>% mutate(medals_on_offer = n_distinct(phase_result_id)) %>% ungroup() %>% group_by(Year, Nationality, medals_on_offer) %>% summarise(medals_won=n_distinct(phase_result_id), perc_on_offer = n_distinct(phase_result_id)/medals_on_offer, .groups='drop') %>% distinct() %>% arrange(Year,desc(perc_on_offer))
look <- results_p1 %>% filter(Rank %in% c(1,2,3)) %>% group_by(Year) %>% mutate(medals_on_offer = n_distinct(phase_result_id)) %>% ungroup() %>% group_by(Year, Nationality, medals_on_offer) %>% summarise(medals_won=n_distinct(phase_result_id), perc_on_offer = n_distinct(phase_result_id)/medals_on_offer, .groups='drop') %>% distinct() %>% arrange(Year,desc(perc_on_offer))
View(look)
look %>% filter(Year==2000 & Nationality %in% c('USA','RUS','CHN','AUS','GER','FRA','ITA','NED','CUB','GBR'))
syd <- look %>% filter(Year==2000 & Nationality %in% c('USA','RUS','CHN','AUS','GER','FRA','ITA','NED','CUB','GBR'))
sum(syd$perc_on_offer)
tok <- look %>% filter(Year==2021 & Nationality %in% c('USA','ROC','CHN','AUS','GER','FRA','ITA','NED','JPN','GBR'))
sum(tok$perc_on_offer)
sum(look$perc_on_offer[which(look$Year==2021)])
sum(look$perc_on_offer[which(look$Year==2000)])
look2 <- results_p1 %>% filter(Rank %in% c(1)) %>% group_by(Year) %>% mutate(medals_on_offer = n_distinct(phase_result_id)) %>% ungroup() %>% group_by(Year, Nationality, medals_on_offer) %>% summarise(medals_won=n_distinct(phase_result_id), perc_on_offer = n_distinct(phase_result_id)/medals_on_offer, .groups='drop') %>% distinct() %>% arrange(Year,desc(perc_on_offer))
View(look2)
syd2 <- look2 %>% filter(Year==2000 & Nationality %in% c('USA','RUS','CHN','AUS','GER','FRA','ITA','NED','CUB','GBR'))
tok2 <- look2 %>% filter(Year==2021 & Nationality %in% c('USA','ROC','CHN','AUS','GER','FRA','ITA','NED','JPN','GBR'))
sum(look2$perc_on_offer[which(look$Year==2021)])
sum(look2$perc_on_offer[which(look2$Year==2021)])
sum(syd2$perc_on_offer)
sum(tok2$perc_on_offer)
knitr::opts_chunk$set(echo = TRUE)
## Clean up
rm(list=ls())
## set directories
# Production version
cDir<-'.'
dDir <- paste0(cDir,'/data/')
# Test version on windows
if (Sys.info()['sysname']=="Windows"){
cDir<-dirname(rstudioapi::getActiveDocumentContext()$path)
dDir <- paste0(cDir,'/data/')
}
## load libraries
library(tidyverse)
library(DBI)
library(RODBC)
library(ggplot2)
library(DT)
library(VIM)
# # read results data from local RDS file
results_read <- readRDS(paste0(dDir,'results.rds'))
# read NSWIS result IDs to join onto main results data
nswisResults <- readRDS(paste0(dDir,'nswisResults.rds'))
# remove first 3 columns (all values are the same in these columns)
results_raw <- results_read[,4:ncol(results_read)]
results_p1 <- readRDS(paste0(dDir,'results_p1.rds'))
results_p2 <- readRDS(paste0(dDir,'results_p2.rds'))
# read populations RDS file for population data
populations <- readRDS(paste0(dDir,'populations.rds')) %>%
mutate(Nationality = gsub('NSW','NSWIS',Nationality))
# Total Medals Tally
d <- results_p1 %>% filter(Rank %in% c(1,2,3)) %>%
group_by(Nationality) %>%
summarise(Medals = n_distinct(phase_result_id)) %>%
arrange(desc(Medals)) %>%
top_n(Medals, n = 20)
nswis <- results_p1 %>% filter(nswisResult==1 & Rank %in% c(1,2,3)) %>%
summarise(Medals = n_distinct(phase_result_id)) %>%
mutate(Nationality = 'NSWIS')
d <- rbind(d,nswis) %>%
mutate(highlight = ifelse(Nationality=='NSWIS','yes','no'))
d %>%
ggplot(aes(x=reorder(Nationality, Medals), y=Medals, fill=highlight)) +
geom_bar(stat = "identity", width = 0.65) +
geom_text(aes(label=Medals), hjust=-0.1, size=4) +
coord_flip() +
labs(title = 'Total Olympic Medals since 1996 (Top 20 Nations)', x='', y='') +
theme_classic() +
scale_fill_manual(values=c('yes'='steelblue4','no'='grey60'),guide=FALSE) +
scale_y_continuous(expand = c(0,0), limits = c(0,1.2*max(d$Medals)))
# Total Medals Tally
d <- results_p1 %>%
filter(Rank %in% c(1,2,3) & Nationality %in% c('AUS','GBR','USA','NZL')) %>%
group_by(Nationality, Year) %>%
summarise(Medals = n_distinct(phase_result_id),.groups='drop')
nswis <- results_p1 %>% filter(nswisResult==1 & Rank %in% c(1,2,3)) %>%
group_by(Year) %>%
summarise(Medals = n_distinct(phase_result_id)) %>%
mutate(Nationality = 'NSWIS')
d <- rbind(d,nswis) %>%
mutate(highlight = ifelse(Nationality=='NSWIS','yes','no'))
d %>%
ggplot(aes(x=Year, y=Medals, group=Nationality,colour=highlight)) +
geom_point(aes(shape=Nationality)) +
geom_line(aes(linetype=Nationality)) +
geom_text(data=d%>%filter(Year==max(d$Year,na.rm=TRUE)),
aes(x=Year,y=Medals,label=Nationality),
hjust=-0.5,size=3) +
labs(title = 'Olympic Medals Won', x='', y='') +
theme_classic() +
theme(legend.position='none') +
scale_colour_manual(values=c('yes'='steelblue4','no'='grey40'),guide=FALSE) +
scale_y_continuous(expand = c(0,0), limits = c(0,1.2*max(d$Medals))) +
scale_x_continuous(breaks = c(1996,2000,2004,2008,2012,2016,2020), limits = c(1996,2022))
# Total Medals Tally
d <- results_p1 %>%
mutate(Year = ifelse(Year%in%c(2021),2020,Year)) %>%
filter(Rank %in% c(1,2,3) & Nationality %in% c('AUS','GBR','USA','NZL')) %>%
group_by(Nationality, Year) %>%
summarise(Medals = n_distinct(phase_result_id),
Medalists = n_distinct(athleteID),.groups='drop')
nswis <- results_p1 %>%
mutate(Year = ifelse(Year%in%c(2021),2020,Year)) %>%
filter(nswisResult==1 & Rank %in% c(1,2,3)) %>%
group_by(Year) %>%
summarise(Medals = n_distinct(phase_result_id),
Medalists = n_distinct(athleteID)) %>%
mutate(Nationality = 'NSWIS')
d <- rbind(d,nswis) %>%
mutate(highlight = ifelse(Nationality=='NSWIS','yes','no')) %>%
gather(key='lab',value='y',-Nationality,-Year,-highlight) %>%
mutate(lab=factor(lab, levels=c('Medals','Medalists')))
d %>%
ggplot(aes(x=Year, y=y, group=Nationality,colour=highlight)) +
geom_point(aes(shape=Nationality)) +
geom_line(aes(linetype=Nationality)) +
geom_text(data=d%>%filter(Year==max(d$Year,na.rm=TRUE)),
aes(x=Year,y=y,label=Nationality),
hjust=-0.3,size=3) +
facet_wrap(.~lab) +
labs(title = '', x='', y='') +
theme_classic() +
theme(legend.position='none') +
scale_colour_manual(values=c('yes'='steelblue4','no'='grey40'),guide=FALSE) +
scale_y_continuous(expand = c(0,0), limits = c(0,1.2*max(d$y))) +
scale_x_continuous(breaks = c(1996,2000,2004,2008,2012,2016,2020), limits = c(1996,2024))
# Total Olympic medals relative to population
d <- results_p1 %>%
mutate(Year = ifelse(Year%in%c(2021),2020,Year)) %>%
filter(Rank %in% c(1,2,3) & Nationality %in% c('AUS','GBR','USA','NZL')) %>%
group_by(Nationality, Year) %>%
summarise(Medals = n_distinct(phase_result_id),
Medalists = n_distinct(athleteID),.groups='drop')
nswis <- results_p1 %>% filter(nswisResult==1) %>%
mutate(Year = ifelse(Year%in%c(2021),2020,Year)) %>%
group_by(Year) %>%
summarise(Medals = n_distinct(phase_result_id),
Medalists = n_distinct(athleteID)) %>%
mutate(Nationality = 'NSWIS')
d <- rbind(d, nswis) %>%
mutate(highlight = ifelse(Nationality=='NSWIS','yes','no')) %>%
gather(key='Athletes',value='y',-c(Nationality,Year,highlight)) %>%
left_join(populations, by=c('Nationality','Year')) %>%
mutate(y = 100*y/Population)
d %>%
ggplot(aes(x=Year, y=y, group=Nationality,colour=highlight)) +
geom_point(aes(shape=Nationality)) +
geom_line(aes(linetype=Nationality)) +
geom_text(data=d%>%filter(Year==max(d$Year,na.rm=TRUE)),
aes(x=Year,y=y,label=Nationality),
hjust=-0.3,size=3) +
facet_wrap(.~Athletes) +
labs(title = 'Results as a proportion (%) of Population', x='', y='% of population') +
theme_classic() +
theme(legend.position='none') +
scale_colour_manual(values=c('yes'='steelblue4','no'='grey40'),guide=FALSE) +
scale_y_continuous(expand = c(0,0), limits = c(0,1.2*max(d$y))) +
scale_x_continuous(breaks = c(1996,2000,2004,2008,2012,2016,2020), limits = c(1996,2024))
# Total Medals Tally
d <- results_p1 %>%
filter(Rank %in% c(1,2,3) & Nationality %in% c('AUS','GBR','USA','NZL')) %>%
group_by(Nationality, Year) %>%
summarise(Medals = n_distinct(phase_result_id),
Medalists = n_distinct(athleteID),.groups='drop') %>%
# nswis <- results_p1 %>% filter(nswisResult==1 & Rank %in% c(1,2,3)) %>%
#   group_by(Year) %>%
#   summarise(Medals = n_distinct(phase_result_id),
#             Medalists = n_distinct(athleteID)) %>%
#   mutate(Nationality = 'NSWIS')
# d <- rbind(d,nswis) %>%
#   mutate(highlight = ifelse(Nationality=='NSWIS','yes','no')) %>%
mutate(y = Medalists/Medals)
d %>%
ggplot(aes(x=Year, y=y, group=Nationality)) +
geom_point(aes(shape=Nationality),colour='grey40') +
geom_line(aes(linetype=Nationality),colour='grey40') +
geom_text(data=d%>%filter(Year==max(d$Year,na.rm=TRUE)),
aes(x=Year,y=y,label=Nationality),
hjust=-0.5,size=3) +
labs(title = 'Medalists/Medals Ratio', x='', y='') +
theme_classic() +
theme(legend.position='none') +
scale_colour_manual(values=c('yes'='steelblue4','no'='grey40'),guide=FALSE) +
scale_y_continuous(expand = c(0,0), limits = c(0,1.2*max(d$y))) +
scale_x_continuous(breaks = c(1996,2000,2004,2008,2012,2016,2020), limits = c(1996,2022))
# total medals
tot_medals <- results_p1 %>% filter(Rank %in% c(1,2,3)) %>%
group_by(Nationality) %>%
summarise(Medals = n_distinct(phase_result_id)) %>%
arrange(desc(Medals))
# total athletes
tot_athletes <- results_p1 %>%
group_by(Nationality, Year) %>%
summarise(Athletes = n_distinct(athleteID), .groups='drop') %>%
group_by(Nationality) %>%
summarise(`Total Athletes` = sum(Athletes), .groups='drop')
d <- tot_medals %>% left_join(tot_athletes, by=c("Nationality"))
nswis_medals <- results_p1 %>% filter(nswisResult==1 & Rank %in% c(1,2,3)) %>%
summarise(Medals = n_distinct(phase_result_id)) %>%
arrange(desc(Medals))
nswis_athletes <- results_p1 %>%  filter(nswisResult==1) %>%
group_by(Year) %>%
summarise(Athletes = n_distinct(athleteID), .groups='drop') %>%
summarise(`Total Athletes` = sum(Athletes))
nswis <- cbind(nswis_athletes,nswis_medals)
d %>%
ggplot(aes(x=`Total Athletes`, y=Medals)) +
geom_point(colour='grey40') +
geom_point(data=nswis,aes(x=`Total Athletes`,y=Medals),colour='blue') +
geom_smooth(formula = y~x, method = 'lm', se=FALSE, colour='black', linetype='dashed', size=0.5) +
geom_text(data = d %>% filter(Nationality %in% c('AUS','CHN','GBR','USA','NZL','RUS','GER')),
aes(label=Nationality), vjust=1.5,size=3) +
geom_text(data = nswis, aes(label='NSWIS'), vjust=-1,size=3,colour='blue') +
labs(title = 'Total Olympic Medals versus Total Athletes by Nation since 1996') +
theme_classic()
# Total Olympic Squad sizes (sum of athlete numbers each Games)
d <- results_p1 %>%
group_by(Nationality, Year) %>%
summarise(Athletes = n_distinct(athleteID), .groups='drop') %>%
group_by(Nationality) %>%
summarise(Athletes = sum(Athletes), .groups='drop') %>%
arrange(desc(Athletes)) %>%
top_n(Athletes, n = 20)
nswis <- results_p1 %>% filter(nswisResult==1) %>%
group_by(Year) %>%
summarise(Athletes = n_distinct(athleteID),.groups='drop') %>%
summarise(Athletes = sum(Athletes)) %>%
mutate(Nationality = 'NSWIS')
d <- rbind(d,nswis) %>%
mutate(highlight = ifelse(Nationality=='NSWIS','yes','no'))
d %>%
ggplot(aes(x=reorder(Nationality, Athletes),fill=highlight, y=Athletes)) +
geom_bar(stat = "identity", width = 0.65) +
geom_text(aes(label=Athletes), hjust=-0.1, size=4) +
coord_flip() +
labs(title = 'Cumulative Olympic Squad Size since 1996 (Top 20 Nations)', x='', y='') +
theme_classic() +
scale_fill_manual(values=c('yes'='steelblue4','no'='grey60'),guide=FALSE) +
scale_y_continuous(expand = c(0,0), limits = c(0,1.2*max(d$Athletes)))
# Total Olympic Squad sizes (athlete numbers each Games)
d <- results_p1 %>%
mutate(Year = ifelse(Year%in%c(2021),2020,Year)) %>%
filter(Nationality %in% c('AUS','GBR','USA','NZL')) %>%
group_by(Nationality, Year) %>%
summarise(Athletes = n_distinct(athleteID), .groups='drop')
nswis <- results_p1 %>% filter(nswisResult==1) %>%
mutate(Year = ifelse(Year%in%c(2021),2020,Year)) %>%
group_by(Year) %>%
summarise(Athletes = n_distinct(athleteID),.groups='drop') %>%
mutate(Nationality = 'NSWIS')
d <- rbind(d,nswis) %>%
mutate(highlight = ifelse(Nationality=='NSWIS','yes','no'))
aus <- mean(d$Athletes[which(d$Year!=2000 & d$Nationality=='AUS')])
usa <- mean(d$Athletes[which(d$Year!=1996 & d$Nationality=='USA')])
gbr <- mean(d$Athletes[which(d$Year!=2012 & d$Nationality=='GBR')])
nsw <- mean(d$Athletes[which(d$Year!=2000 & d$Nationality=='NSWIS')])
d2 <- d %>%
mutate(
Adjusted = ifelse(Year==2000 & Nationality=='AUS', aus, ifelse(
Year==1996 & Nationality=='USA', usa, ifelse(
Year==2012 & Nationality=='GBR', gbr, ifelse(
Year==2000 & Nationality=='NSWIS', nsw, Athletes)))))
d <- cbind(d, d2[,"Adjusted"]) %>%
rename(Actual=Athletes) %>%
gather(key='Athletes',value='y',-c(Nationality,Year,highlight))
d %>%
ggplot(aes(x=Year, y=y, group=Nationality,colour=highlight)) +
geom_point(aes(shape=Nationality)) +
geom_line(aes(linetype=Nationality)) +
geom_text(data=d%>%filter(Year==max(d$Year,na.rm=TRUE)),
aes(x=Year,y=y,label=Nationality),
hjust=-0.3,size=3) +
facet_wrap(.~Athletes) +
labs(title = 'Squad Size', x='', y='') +
theme_classic() +
theme(legend.position='none') +
scale_colour_manual(values=c('yes'='steelblue4','no'='grey40'),guide=FALSE) +
scale_y_continuous(expand = c(0,0), limits = c(0,1.2*max(d$y))) +
scale_x_continuous(breaks = c(1996,2000,2004,2008,2012,2016,2020), limits = c(1996,2024))
# Total Olympic Squad sizes (athlete numbers each Games)
d <- results_p1 %>%
mutate(Year = ifelse(Year%in%c(2021),2020,Year)) %>%
filter(Nationality %in% c('AUS','GBR','USA','NZL')) %>%
group_by(Nationality, Year) %>%
summarise(Athletes = n_distinct(athleteID), .groups='drop')
nswis <- results_p1 %>% filter(nswisResult==1) %>%
mutate(Year = ifelse(Year%in%c(2021),2020,Year)) %>%
group_by(Year) %>%
summarise(Athletes = n_distinct(athleteID),.groups='drop') %>%
mutate(Nationality = 'NSWIS')
d <- rbind(d,nswis) %>%
mutate(highlight = ifelse(Nationality=='NSWIS','yes','no'))
aus <- mean(d$Athletes[which(d$Year!=2000 & d$Nationality=='AUS')])
usa <- mean(d$Athletes[which(d$Year!=1996 & d$Nationality=='USA')])
gbr <- mean(d$Athletes[which(d$Year!=2012 & d$Nationality=='GBR')])
nsw <- mean(d$Athletes[which(d$Year!=2000 & d$Nationality=='NSWIS')])
d2 <- d %>%
mutate(
Adjusted = ifelse(Year==2000 & Nationality=='AUS', aus, ifelse(
Year==1996 & Nationality=='USA', usa, ifelse(
Year==2012 & Nationality=='GBR', gbr, ifelse(
Year==2000 & Nationality=='NSWIS', nsw, Athletes)))))
d <- cbind(d, d2[,"Adjusted"]) %>%
rename(Actual=Athletes) %>%
gather(key='Athletes',value='y',-c(Nationality,Year,highlight)) %>%
left_join(populations, by=c('Nationality','Year')) %>%
mutate(y = 100*y/Population)
d %>%
ggplot(aes(x=Year, y=y, group=Nationality,colour=highlight)) +
geom_point(aes(shape=Nationality)) +
geom_line(aes(linetype=Nationality)) +
geom_text(data=d%>%filter(Year==max(d$Year,na.rm=TRUE)),
aes(x=Year,y=y,label=Nationality),
hjust=-0.3,size=3) +
facet_wrap(.~Athletes) +
labs(title = 'Squad Size as a proportion (%) of Population', x='', y='% of population') +
theme_classic() +
theme(legend.position='none') +
scale_colour_manual(values=c('yes'='steelblue4','no'='grey40'),guide=FALSE) +
scale_y_continuous(expand = c(0,0), limits = c(0,1.2*max(d$y))) +
scale_x_continuous(breaks = c(1996,2000,2004,2008,2012,2016,2020), limits = c(1996,2024))
# Total Number of Sports
d <- results_p1 %>%
mutate(Year = ifelse(Year%in%c(2021),2020,Year)) %>%
filter(Nationality %in% c('AUS','GBR','USA','NZL')) %>%
group_by(Nationality, Year) %>%
summarise(Sports = n_distinct(Sport), .groups='drop')
nswis <- results_p1 %>% filter(nswisResult==1) %>%
mutate(Year = ifelse(Year%in%c(2021),2020,Year)) %>%
group_by(Year) %>%
summarise(Sports = n_distinct(Sport),.groups='drop') %>%
mutate(Nationality = 'NSWIS')
d <- rbind(d,nswis) %>%
mutate(highlight = ifelse(Nationality=='NSWIS','yes','no'))
aus <- mean(d$Sports[which(d$Year!=2000 & d$Nationality=='AUS')])
usa <- mean(d$Sports[which(d$Year!=1996 & d$Nationality=='USA')])
gbr <- mean(d$Sports[which(d$Year!=2012 & d$Nationality=='GBR')])
nsw <- mean(d$Sports[which(d$Year!=2000 & d$Nationality=='NSWIS')])
d2 <- d %>%
mutate(
Adjusted = ifelse(Year==2000 & Nationality=='AUS', aus, ifelse(
Year==1996 & Nationality=='USA', usa, ifelse(
Year==2012 & Nationality=='GBR', gbr, ifelse(
Year==2000 & Nationality=='NSWIS', nsw, Sports)))))
d <- cbind(d, d2[,"Adjusted"]) %>%
rename(Actual=Sports) %>%
gather(key='Sports',value='y',-c(Nationality,Year,highlight))
d %>%
ggplot(aes(x=Year, y=y, group=Nationality, colour=highlight)) +
geom_point(aes(shape=Nationality)) +
geom_line(aes(linetype=Nationality)) +
geom_text(data=d%>%filter(Year==max(d$Year,na.rm=TRUE)),
aes(x=Year,y=y,label=Nationality),
hjust=-0.3,size=3) +
facet_wrap(.~Sports) +
labs(title = 'Total Sports Represented', x='', y='') +
theme_classic() +
theme(legend.position='none') +
scale_colour_manual(values=c('yes'='steelblue4','no'='grey40'),guide=FALSE) +
scale_y_continuous(expand = c(0,0), limits = c(10,1.2*max(d$y))) +
scale_x_continuous(breaks = c(1996,2000,2004,2008,2012,2016,2020), limits = c(1996,2024))
# Total Events (medal winning opportunities)
d <- results_p1 %>%
mutate(Year = ifelse(Year%in%c(2021),2020,Year)) %>%
filter(Nationality %in% c('AUS','GBR','USA','NZL')) %>%
group_by(Nationality, Year) %>%
summarise(MWO = n_distinct(Sport,Discipline,Gender), .groups='drop')
nswis <- results_p1 %>% filter(nswisResult==1) %>%
mutate(Year = ifelse(Year%in%c(2021),2020,Year)) %>%
group_by(Year) %>%
summarise(MWO = n_distinct(Sport,Discipline,Gender),.groups='drop') %>%
mutate(Nationality = 'NSWIS')
d <- rbind(d,nswis) %>%
mutate(highlight = ifelse(Nationality=='NSWIS','yes','no'))
aus <- mean(d$MWO[which(d$Year!=2000 & d$Nationality=='AUS')])
usa <- mean(d$MWO[which(d$Year!=1996 & d$Nationality=='USA')])
gbr <- mean(d$MWO[which(d$Year!=2012 & d$Nationality=='GBR')])
nsw <- mean(d$MWO[which(d$Year!=2000 & d$Nationality=='NSWIS')])
d2 <- d %>%
mutate(
Adjusted = ifelse(Year==2000 & Nationality=='AUS', aus, ifelse(
Year==1996 & Nationality=='USA', usa, ifelse(
Year==2012 & Nationality=='GBR', gbr, ifelse(
Year==2000 & Nationality=='NSWIS', nsw, MWO)))))
d <- cbind(d, d2[,"Adjusted"]) %>%
rename(Actual=MWO) %>%
gather(key='MWO',value='y',-c(Nationality,Year,highlight))
d %>%
ggplot(aes(x=Year, y=y, group=Nationality,colour=highlight)) +
geom_point(aes(shape=Nationality)) +
geom_line(aes(linetype=Nationality)) +
geom_text(data=d%>%filter(Year==max(d$Year,na.rm=TRUE)),
aes(x=Year,y=y,label=Nationality),
hjust=-0.3,size=3) +
facet_wrap(.~MWO) +
labs(title = 'Total Medal Winning Opportunities', x='', y='') +
theme_classic() +
theme(legend.position='none') +
scale_colour_manual(values=c('yes'='steelblue4','no'='grey40'),guide=FALSE) +
scale_y_continuous(expand = c(0,0), limits = c(40,1.05*max(d$y))) +
scale_x_continuous(breaks = c(1996,2000,2004,2008,2012,2016,2020), limits = c(1996,2024))
# Total Events (medal winning opportunities)
d <- results_p1 %>%
filter(Nationality %in% c('AUS','GBR','USA','NZL')) %>%
mutate(Year = ifelse(Year%in%c(2021),2020,Year)) %>%
group_by(Nationality, Year) %>%
summarise(
Conversion = 100* n_distinct(ifelse(Rank %in% c(1,2,3),phase_result_id,NA),na.rm=TRUE)/(
n_distinct(Sport,Discipline,Gender)),.groups='drop')
# nswis <- results_p1 %>% filter(nswisResult==1) %>%
#   group_by(Year) %>%
#   summarise(
#     Conversion = 100* n_distinct(ifelse(Rank %in% c(1,2,3),phase_result_id,NA),na.rm=TRUE)/(
#       n_distinct(Sport,Discipline,Gender)),.groups='drop') %>%
#   mutate(Nationality = 'NSWIS')
#
# d <- rbind(d,nswis) %>%
#   mutate(highlight = ifelse(Nationality=='NSWIS','yes','no'))
d %>%
ggplot(aes(x=Year, y=Conversion, group=Nationality
# ,colour=highlight
)) +
geom_point(aes(shape=Nationality),colour='grey40') +
geom_line(aes(linetype=Nationality),colour='grey40') +
geom_text(data=d%>%filter(Year==min(d$Year,na.rm=TRUE)),
aes(x=Year,y=Conversion,label=Nationality),
hjust=1.5,size=3) +
labs(title = 'Medal Conversion Rate (%)', x='', y='') +
theme_classic() +
theme(legend.position='none') +
# scale_colour_manual(values=c('yes'='steelblue4','no'='grey40'),guide=FALSE) +
scale_y_continuous(expand = c(0,0), limits = c(0,1.1*max(d$Conversion))) +
scale_x_continuous(breaks = c(1996,2000,2004,2008,2012,2016,2020), limits = c(1994,2020))
# Total Events (medal winning opportunities)
d <- results_p1 %>%
filter(Nationality %in% c('AUS','GBR','USA','NZL')) %>%
mutate(Year = ifelse(Year%in%c(2021),2020,Year)) %>%
group_by(Nationality, Year) %>%
summarise(
Conversion = 100* n_distinct(ifelse(Rank %in% c(1,2,3),phase_result_id,NA),na.rm=TRUE)/(
n_distinct(Sport,Discipline,Gender)),.groups='drop')
nswis <- results_p1 %>% filter(nswisResult==1) %>%
group_by(Year) %>%
summarise(
Conversion = 100* n_distinct(ifelse(Rank %in% c(1,2,3),phase_result_id,NA),na.rm=TRUE)/(
n_distinct(Sport,Discipline,Gender)),.groups='drop') %>%
mutate(Nationality = 'NSWIS')
d <- rbind(d,nswis) %>%
mutate(highlight = ifelse(Nationality=='NSWIS','yes','no'))
d %>%
ggplot(aes(x=Year, y=Conversion, group=Nationality
,colour=highlight
)) +
geom_point(aes(shape=Nationality),colour='grey40') +
geom_line(aes(linetype=Nationality),colour='grey40') +
geom_text(data=d%>%filter(Year==min(d$Year,na.rm=TRUE)),
aes(x=Year,y=Conversion,label=Nationality),
hjust=1.5,size=3) +
labs(title = 'Medal Conversion Rate (%)', x='', y='') +
theme_classic() +
theme(legend.position='none') +
# scale_colour_manual(values=c('yes'='steelblue4','no'='grey40'),guide=FALSE) +
scale_y_continuous(expand = c(0,0), limits = c(0,1.1*max(d$Conversion))) +
scale_x_continuous(breaks = c(1996,2000,2004,2008,2012,2016,2020), limits = c(1994,2020))
View(d)
